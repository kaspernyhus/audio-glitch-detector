[project]
name = "audio-glitch-detector"
version = "0.1.0"
description = "Detect audio glitches and discontinuities in sinusoidal audio signals"
authors = [
    {name = "Kasper Nyhus", email = "kanyhus@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
dependencies = [
    "numpy>=2.2.2",
    "pyaudio>=0.2.14",
    "soundfile>=0.13.0",
    "tqdm>=4.67.1",
    "rich>=13.9.4",
    "matplotlib>=3.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
audio-glitch-detector = "audio_glitch_detector.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]
per-file-ignores = { "__init__.py" = ["F401"] }

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["audio_glitch_detector"]
omit = [
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
